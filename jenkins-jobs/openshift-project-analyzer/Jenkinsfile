@Library(['pipeline-toolbox', 'tne_library']) _

import org.jenkinsci.plugins.pipeline.modeldefinition.Utils

// Activate the debug log level
// env.LOG_LEVEL = 'debug'

properties([
    pipelineTriggers([cron('TZ=CET\nH H(20-23) * * 1-5')]),
    disableConcurrentBuilds()
])

env.BUILD_IMAGE = 'dockerhub.rnd.amadeus.net/dga-docker-validated-adt/acs_praxis/jenkins-slave-oc44:13.0.1'
def envInputs = [
    timeout: 20,
    dockerExtraArgs: '--network host --add-host=repository.secure.ifao.net:172.19.209.95 --add-host=nexus.secure.ifao.net:172.19.208.84',
    jenkinsCredId: 'APP_RND_CTS',
    kibanaCredentialsId: 'APP_RND_CTS'
]

execEnv(env.BUILD_IMAGE, envInputs) {

    def unneededHelmReleases

    execStage('Analyze Project') {
        unneededHelmReleases = analyzeIfaoOpenShiftProject('DIP', 'keycloak-cicd', 'IZ_USER', 'OC_DIP_JENKINS_SA_TOKEN', ['keycloak'], 'keycloak-')
    }

    execStage('Notify') {
        if (unneededHelmReleases) {
            def helmProjectURL = 'https://console-openshift-console.apps.openshift.sofia.ifao.net/helm-releases/ns/dip/release'
            def helmReleasesList = unneededHelmReleases.collect { "<li>${helmProjectURL}/${it}</li>" }.join('\n')
            def body = """<html>
<body>
Hello SkyMoon devs,
<p>
The Project Analyzer has found some Helm releases that have no associated Bitbucket branches. They can probably be uninstalled.<br>
Here is the list of Helm releases:
<ul>
${helmReleasesList}
</ul>
<p>
You can delete the release using the <a href="https://jenkins-pipeline-tchtne.cicd.rnd.amadeus.net/job/IFAO-SW2/job/DIP/job/jobs/job/openshift-project-cleaner/">Project Cleaner job</a>.
<p>
This email has been generated by the following <a href="${env.BUILD_URL}">job</a>.
<p>
Cheers<br>
Jenkins
</body>
</html>"""
            emailext from: 'jenkins-amadeus@amadeus.com',
                to: 'DG-CORP-Skymoon-Devs@amadeus.com',
                subject: 'The dip OpenShift project may require some clean-up',
                body: body,
                mimeType: 'text/html'
        } else {
            logInfo { 'No unneeded Helm releases found' }
            Utils.markStageSkippedForConditional(STAGE_NAME)
        }
    }

}
