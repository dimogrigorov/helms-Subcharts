## RabbitMQ application credentials
## Ref: http://rabbitmq.com/access-control.html
##
rabbitmqUsername: devops
rabbitmqPassword: somepass

## RabbitMQ Management user used for health checks
managementUsername: management
managementPassword: manager23

## Place any additional key/value configuration to add to rabbitmq.conf
## Ref: https://www.rabbitmq.com/configure.html#config-items
extraConfig: |
#  queue_master_locator = min-masters

## Place advanced.config file in /etc/rabbitmq/advanced.config
## Ref: https://www.rabbitmq.com/configure.html#advanced-config-file
advancedConfig: |

## Definitions specification within the secret, will always be mounted
## at /etc/definitions/defintions.json
definitionsSource: definitions.json

## Place any additional plugins to enable in /etc/rabbitmq/enabled_plugins
## Ref: https://www.rabbitmq.com/plugins.html
extraPlugins: |
  rabbitmq_shovel,
  rabbitmq_shovel_management,
  rabbitmq_federation,
  rabbitmq_federation_management,

definitions:
  globalParameters: |-
#    {
#        "name": "cluster_name",
#        "value": "rabbitmq-ha"
#    }
  users: |-
#   {
#     "name": "myUsername",
#     "password": "myPassword",
#     "tags": "administrator"
#   }
  vhosts: |-
   {
     "name": "cytric_companions"
   }
  parameters: |-
#   {
#     "value": {
#       "src-uri": "amqp://localhost",
#       "src-queue": "source",
#       "dest-uri": "amqp://localhost",
#       "dest-queue": "destination",
#       "add-forward-headers": false,
#       "ack-mode": "on-confirm",
#       "delete-after": "never"
#     },
#     "vhost": "/",
#     "component": "shovel",
#     "name": "test"
#   }
  permissions: |-
   {
     "user": "devops",
     "vhost": "cytric_companions",
     "configure": ".*",
     "write": ".*",
     "read": ".*"
   }
  topicPermissions: |-
#   {
#     "user": "myUsername",
#     "vhost": "/rabbit",
#     "exchange": "myexchange",
#     "write": ".*",
#     "read": ".*"
#   }
  queues: |-
#    {
#       "name":"myName",
#       "vhost":"/rabbit",
#       "durable":true,
#       "auto_delete":false,
#       "arguments":{}
#    }
  exchanges: |-
#    {
#       "name":"myName",
#       "vhost":"/rabbit",
#       "type":"direct",
#       "durable":true,
#       "auto_delete":false,
#       "internal":false,
#       "arguments":{}
#    }
  bindings: |-
#    {
#       "source":"myName",
#       "vhost":"/rabbit",
#       "destination":"myName",
#       "destination_type":"queue",
#       "routing_key":"myKey",
#       "arguments":{}
#    }
## Sets the policies in definitions.json. This can be used to control the high
## availability of queues by mirroring them to multiple nodes.
## Ref: https://www.rabbitmq.com/ha.html
  policies: |-
    {
      "name": "ha-all",
      "pattern": ".*",
      "vhost": "cytric_companions",
      "definition": {
        "ha-mode": "all",
        "ha-sync-mode": "automatic",
        "ha-sync-batch-size": 1
      }
    }

## Ref: https://www.rabbitmq.com/rabbitmqctl.8.html#force_boot
forceBoot: false

## RabbitMQ default VirtualHost
## Ref: https://www.rabbitmq.com/vhosts.html
##
rabbitmqVhost: "/"

## Erlang cookie to determine whether different nodes are allowed to communicate with each other
## Ref: https://www.rabbitmq.com/clustering.html
##
rabbitmqErlangCookie: Xj2H2EPmPdzTaAjRdV4efcJamS5o2JHb

## RabbitMQ Memory high watermark
## Ref: http://www.rabbitmq.com/memory.html
##
rabbitmqMemoryHighWatermark: 2GB
rabbitmqMemoryHighWatermarkType: absolute

## EPMD port for peer discovery service used by RabbitMQ nodes and CLI tools
## Ref: https://www.rabbitmq.com/clustering.html
##
rabbitmqEpmdPort: 4369

## Node port
rabbitmqNodePort: 5672

## Manager port
rabbitmqManagerPort: 15672

## Set to true to precompile parts of RabbitMQ with HiPE, a just-in-time
## compiler for Erlang. This will increase server throughput at the cost of
## increased startup time. You might see 20-50% better performance at the cost
## of a few minutes delay at startup.
rabbitmqHipeCompile: false

## SSL certificates
## Red: http://www.rabbitmq.com/ssl.html
rabbitmqCert:
  enabled: true

  # Specifies an existing secret to be used for SSL Certs
  existingSecret: ""

  ## Create a new secret using these values
  cacertfile: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVRENDQWppZ0F3SUJBZ0lVSysyVVd2WkZaZUZFNW1qSG1xczlLZi8vTDhrd0RRWUpLb1pJaHZjTkFRRUwKQlFBd01URWdNQjRHQTFVRUF3d1hWRXhUUjJWdVUyVnNabE5wWjI1bFpIUlNiMjkwUTBFeERUQUxCZ05WQkFjTQpCQ1FrSkNRd0hoY05NakF3TlRBNE1USTFPVEV3V2hjTk16QXdOVEEyTVRJMU9URXdXakF4TVNBd0hnWURWUVFECkRCZFVURk5IWlc1VFpXeG1VMmxuYm1Wa2RGSnZiM1JEUVRFTk1Bc0dBMVVFQnd3RUpDUWtKRENDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS2pkSWF5YnNwTDZxbWFkTGRBTlQxMnRlaWs1NXdnZgpOZlNKczd2emNjdTdvVHlPdlAyUWJyVmpkZU5mTzdSZ25NSUlwV2FGS0FPUXpaY1FDRktMSlNRNG4yQ2x0V1hJClZqN2JCSlNIdHpDNm0xSzNDVy81U3B5ajU3blVTQTJFODlVaCsxUDd2aFpjUHpwWXdVVjhlcC9qQTNwT3owYkIKVXZ6SERMRTRBTlIvT3hLUDdwUExOWWhIc0tBOUZraTNRbVZNemM5a08ycUlSeEFFUzhLRjR2YWdJMXo5cXdETQpzQ3l1TXhmSzJzRW1FUGtQYlppMTlMelRMR0FDOVhrVVluWDVZQmFkcnRFZXdlelV2N3lhNDNZNXVSc3cxY2tSClo1QmZuVTlzV251aGhXcUN0UUNqdzRackhwWlJhaWJqWXdBbVI2QmFMZnQxNUQ0RFJmMjRXYWNDQXdFQUFhTmcKTUY0d0N3WURWUjBQQkFRREFnRUdNQjBHQTFVZERnUVdCQlJEaTNjSnZEcExEK1BjR1BoUGNBRWhOeEZFVmpBZgpCZ05WSFNNRUdEQVdnQlJEaTNjSnZEcExEK1BjR1BoUGNBRWhOeEZFVmpBUEJnTlZIUk1CQWY4RUJUQURBUUgvCk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ0ovSVVNRHQ2RlBuQ2x4cCsxNUE1Vk1SRmpTUzh2RXdXM3VkNm4Kb1VKVUZYWmJPNHJRTHROMU5ibmpOZmw1Y0tpMjNLNkdlQzdTNzdPalpKN3Q4a1l6N3lSdWJNczc0MmNuUkNlbwpyU3Y2eEtsckQ1WXFhUy8vclNmUEN0ZDNkWWU5ektkaEg1WnlEOWwxZHJzUGdxRUkyVnV3dkgwZUlXbTd5OFRpCjNDNFRKWXgvUXpXTzkvT0RGOTQyYzM2SDhLclNXM2MrWjFRdXVJV0QxYjEwdUtBRmg2QVZ1U0VuMkgzRUtaUGoKaTlYMTF1UjNYamFoK3VEUGpqamhnaW10c1k0T3BRYkpFWEw3NlJrVXNKeG9VNVc5Vk03NlBHWnBGVmQ5V2FYeAozKzYzQjhOYWN2clFocW1LSE9oZS81c1BzN0ZjdnovSWV5cis5cG5Fc1hLdDFmc00KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  certfile: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURiakNDQWxhZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREF4TVNBd0hnWURWUVFEREJkVVRGTkgKWlc1VFpXeG1VMmxuYm1Wa2RGSnZiM1JEUVRFTk1Bc0dBMVVFQnd3RUpDUWtKREFlRncweU1EQTFNRGd4TWpVNQpNVEJhRncwek1EQTFNRFl4TWpVNU1UQmFNQ1V4RWpBUUJnTlZCQU1NQ1cxaGFXNW1jbUZ0WlRFUE1BMEdBMVVFCkNnd0djMlZ5ZG1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBNVM4SlVQNDgKeWpYak9LZkNXYXcxM3pZd1U4SUlWUXRzL3FYMzZBdWhkaThPczZxSU1IUDlVZ2xEckxvVEJGM0srQm9GWXBEbApxU043T2p4WTZuL1RPUkkyM3NYeVVESG54Njh6OXJ5OXpGbC9ya3pmaUN6aTFKZVEyRDR1Tjg1RVY4Z0MvU1I5ClZjUHh0WVRlQ3N1K3FoNERMeEFQUWJvL0Q5eU5EWXNhVmxHREwzRGdtTlZ5eHhzRWQxanZGdGJCZUZJdUpLQnUKQjNNNUFLYk5xYXA1Yzc2YTZsV1BxKzV1clhLbm9CYzdXVzJTQ3NXM1llUnFCaGgvQ2RjZUZiSzdBOWVueFZnKwp5M0t6eDhDeEc4RUlyeW0zMDZ1d1ZrcFA2a0ZUL3k4MFBhczJNZnNCN0NrQlpxZWhyMWhDOWIwcTVmRjJNaEo3CnYxMC9KR0lxcU01bC93SURBUUFCbzRHY01JR1pNQWtHQTFVZEV3UUNNQUF3Q3dZRFZSMFBCQVFEQWdXZ01CTUcKQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd01CTUNvR0ExVWRFUVFqTUNHQ0NXMWhhVzVtY21GdFpZSUpiV0ZwYm1aeQpZVzFsZ2dsc2IyTmhiR2h2YzNRd0hRWURWUjBPQkJZRUZNQVkzTWdkSEhVeXNIaGswb2RzUDNxM3ROQTFNQjhHCkExVWRJd1FZTUJhQUZFT0xkd204T2tzUDQ5d1krRTl3QVNFM0VVUldNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUIKQVFCUkh0MEhtSHByam5sNUhBaGxOYkxZdkZpNGhZckk4Q1RTVndWbWFmUmswM3pHNTN4bE5RV0RyaEMxRDY2MQo4a3duTWN2blRNbmZOc2IxeHdHQmVTck5Ob2l1RDBTakVtTFM0amVjajZRc005T0hGUEtXbVBFN1V0c2xicnE1CjRVNkFQTjBHQnExeTA3MERBUXhIZFdkdzFwYlBLS3JNaWRiTWxVVUtsWEtDalVLUTd0Q0NBWW9aMWNMYkc2UVcKa0J5V0UvcVZUM1RFUEkxdmRYa0dWUVJLaSt3d1p2SGo0d2tPVXZUNEdmZEd2ZE5uVVJORjgreWVhNXh0NFlqdgprcU93YlBROEZWV1ZtYnhzbVRQc1ZsNGw0Nno1a2NVcmRDUExYZnJFKzBDZ0tSbjNUd0FxVXBvNzdwNG1PUXIrCjZJT1FRbjU2MjNBbVMwVHBCMmxNMUl6MAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  keyfile: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNVM4SlVQNDh5alhqT0tmQ1dhdzEzell3VThJSVZRdHMvcVgzNkF1aGRpOE9zNnFJCk1IUDlVZ2xEckxvVEJGM0srQm9GWXBEbHFTTjdPanhZNm4vVE9SSTIzc1h5VURIbng2OHo5cnk5ekZsL3JremYKaUN6aTFKZVEyRDR1Tjg1RVY4Z0MvU1I5VmNQeHRZVGVDc3UrcWg0REx4QVBRYm8vRDl5TkRZc2FWbEdETDNEZwptTlZ5eHhzRWQxanZGdGJCZUZJdUpLQnVCM001QUtiTnFhcDVjNzZhNmxXUHErNXVyWEtub0JjN1dXMlNDc1czClllUnFCaGgvQ2RjZUZiSzdBOWVueFZnK3kzS3p4OEN4RzhFSXJ5bTMwNnV3VmtwUDZrRlQveTgwUGFzMk1mc0IKN0NrQlpxZWhyMWhDOWIwcTVmRjJNaEo3djEwL0pHSXFxTTVsL3dJREFRQUJBb0lCQUY1MkdKenRiUmpiUlNBZwo1UllZeU11TGhqZS9qYmVmMGZqVFoyNlkvSis5blkyb0NDSVFiS1RYZExGSXNIWG9RclFuNVhoT3lKb0NLZFJDCjgxTVVCSGROYnBnN2RqaGZtV3pRWmRhWXpKSGhnYUxSeElCWUg5WUg4b2R1ZVpZK3lpUjBKK2MybHdJMmxQV0EKSWhUSkRYa0lqYjlrR3lXNElpM2pkYS9UV2JPaGRUOGtFVjExQUVWdVZzS1BvRHJmMWdzZzE0SVkrS1lpMTBaeQpsUmRxT2Q3VEhxckFRTGhiWHprRHExZ05lTGR1ZHFkTCtPNDNKdkhMNmNVZ2tQUFNSN3pZcE1LUC9tM2lyQ0tpClRkTjZ0LytIYmcwbGEwb0pYM0F2S1AvdGlCT0NKMmcza1VSNStRTjU2K2RJdll2ZjRtOHd6QTk0SE8vS0JZN04KQXRKcHZjRUNnWUVBLzR0Q3BvWEYyUk43QkpBT0oyM3FjSnVFK2hLN2NNK0VodmtWRCtBdUlJODdSQm5QdmpKdQpUbWFzVjJjbmFzR3J5YjNHdG82WjE1OTVTWXJCU0ZvSXorMCsvUEo2SU8yZkVFSytPVUp6dWJSajg5YURTWUFBCnkvUm5YWGU0VGRJYzJTK0tvaTJqMHNaNXlTTjZjeTV5cjhnQTdZanJrZU5FYit6aXZZQWZXeWNDZ1lFQTVaZTcKNDJaYzE3eGJkVXlqYkR6RWxCWEtHNWMzVnV0NWdVM2ZmMHRCUmRCODE3QUxmWjBzRERnSjNTdkdUQTNaL0krSwpJSncvSE1LUDc0dFlmMHZ6OVh2UFd0ZlRtMEIrWExGcWZINm4vZkpTLy9TaUg2WWk2UGtwckxEZ0Jad0ZTMXY5CmEydDMrY1JIVTZBdCswRWQvZC9HcHNJT2Z3aHNLS0x5RmdMcnhXa0NnWUE1TEtoSjU2NC9oa3RFMXhKRG9pVU0KOHM3S3dMd3RYbEN4ZmpOSExRcEZBS2JxOHJkM1A0Tk1pVTVQOCtWdXprd29SQXljdGNVWDZEZFR5L2E0d0dRdQpXVTk1ZXFyMmlSUElxSlkwNjNoRytXUlBueFFhc3NmNjJnRHllYUhEejVuaXdlOUxuOWlDaFNPa2JBcXVrSnJhClYyNVZ0d2UxeVZwN2pFMml4bks5aXdLQmdRQ2kwaG1ZS2diYnBDUEVLd2FXZ3YzeCt3WHF6VEdjdmIvY21HcFEKcndEcVR2SEtVSG5GcW9vTFhFNTZnRW5Qczk4TXdvcjFsM2tXbjFCT1ZDYjlsOUs2SEFTd2F2RVJZQXA5R0FEcApxelRkM2xWSVdhZ0VBK0VzRVUraHZZb1IwRlRjM2E3NTJDd3NnQ3NKUGtaOXNlOWdGS3VmcFcxOFgyKzgzZG9MCkRDVkNTUUtCZ1FENEN5M01nbm5VWmJTMXYwd0psZ0x2WjA0Umd5SXhGdjZCS1VGOXhtSnNISExBQzVGOThFOTEKTEFvaEI2b3QwVXdJcUwwRWQ1ajlqM3lXNldGYnZlVDlueDlQV0N4NGJxSHF6YmY5b2NiU1JrdlpIckNYUFErawpJakIrUnZHSW5HZFVndTJRaE1iSGlRWTJVRHFZU21VWkFqY0dpeEwreTN4TUJheGl3T0cyeGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=

## Extra volumes for statefulset
extraVolumes: []

## Extra volume mounts for statefulset
extraVolumeMounts: []

## Authentication mechanism
## Ref: http://www.rabbitmq.com/authentication.html
rabbitmqAuth:
  enabled: true

  config: |
    # auth_mechanisms.1 = PLAIN
    # auth_mechanisms.2 = AMQPLAIN
    # auth_mechanisms.3 = EXTERNAL

## Automatic Partition Handling Strategy (split brain handling)
## Ref: https://www.rabbitmq.com/partitions.html#automatic-handling
## Note: pause-if-all-down is not supported without using a custom configmap since it requires extra
## configuration.

rabbitmqClusterPartitionHandling: autoheal

## Authentication backend
## Ref: https://github.com/rabbitmq/rabbitmq-auth-backend-http
rabbitmqAuthHTTP:
  enabled: true

  config: |
    # auth_backends.1 = http
    # auth_http.user_path     = http://some-server/auth/user
    # auth_http.vhost_path    = http://some-server/auth/vhost
    # auth_http.resource_path = http://some-server/auth/resource
    # auth_http.topic_path    = http://some-server/auth/topic

## LDAP Plugin
## Ref: http://www.rabbitmq.com/ldap.html
rabbitmqLDAPPlugin:
  enabled: false

  ## LDAP configuration:
  config: |
    # auth_backends.1 = ldap
    # auth_ldap.servers.1  = my-ldap-server
    # auth_ldap.user_dn_pattern = cn=${username},ou=People,dc=example,dc=com
    # auth_ldap.use_ssl    = false
    # auth_ldap.port       = 389
    # auth_ldap.log        = false

## MQTT Plugin
## Ref: http://www.rabbitmq.com/mqtt.html
rabbitmqMQTTPlugin:
  enabled: false

  ## MQTT configuration:
  config: |
    # mqtt.default_user     = guest
    # mqtt.default_pass     = guest
    # mqtt.allow_anonymous  = true

## Web MQTT Plugin
## Ref: http://www.rabbitmq.com/web-mqtt.html
rabbitmqWebMQTTPlugin:
  enabled: false

  ## Web MQTT configuration:
  config: |
    # web_mqtt.ssl.port       = 12345
    # web_mqtt.ssl.backlog    = 1024
    # web_mqtt.ssl.certfile   = /etc/cert/cacert.pem
    # web_mqtt.ssl.keyfile    = /etc/cert/cert.pem
    # web_mqtt.ssl.cacertfile = /etc/cert/key.pem
    # web_mqtt.ssl.password   = changeme

## STOMP Plugin
## Ref: http://www.rabbitmq.com/stomp.html
rabbitmqSTOMPPlugin:
  enabled: false

  ## STOMP configuration:
  config: |
    # stomp.default_user = guest
    # stomp.default_pass = guest

## Web STOMP Plugin
## Ref: http://www.rabbitmq.com/web-stomp.html
rabbitmqWebSTOMPPlugin:
  enabled: false

  ## Web STOMP configuration:
  config: |
    # web_stomp.ws_frame = binary
    # web_stomp.cowboy_opts.max_keepalive = 10

## Prometheus Plugin
## Ref: https://www.rabbitmq.com/prometheus.html
rabbitmqPrometheusPlugin:
  enabled: true

  ## NodePort
  nodePort: null

  ## metrics port, overrides configuration:
  ## prometheus.tcp.port
  port: 15692

  ## metrics path, overrides configuration:
  ## prometheus.path
  path: /metrics

  ## Prometheus configuration:
  ## https://github.com/rabbitmq/rabbitmq-prometheus
  config: |
   ## prometheus.path and prometheus.tcp.port can be set above

## AMQPS support
## Ref: http://www.rabbitmq.com/ssl.html
rabbitmqAmqpsSupport:
  enabled: true

  # NodePort
  amqpsNodePort: 5671

  # SSL configuration
  config: |
       listeners.ssl.default             = 5671
       ssl_options.cacertfile            = /etc/cert/cacert.pem
       ssl_options.certfile              = /etc/cert/cert.pem
       ssl_options.keyfile               = /etc/cert/key.pem
       ssl_options.verify                = verify_peer
       ssl_options.fail_if_no_peer_cert  = false
  #
## Number of replicas
replicaCount: 3

image:
  repository: rabbitmq
  tag: 3.8.9-alpine
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  # pullSecrets:
  #   - myRegistrKeySecretName

busyboxImage:
  repository: busybox
  tag: 1.30.1
  pullPolicy: IfNotPresent

## Duration in seconds the pod needs to terminate gracefully
terminationGracePeriodSeconds: 10

service:
  annotations: {}
  clusterIP: None

  ## List of IP addresses at which the service is available
  ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
  ##
  externalIPs: []

  loadBalancerIP: ""
  externalTrafficPolicy: ""
  loadBalancerSourceRanges: []
  type: ClusterIP

  ## Customize nodePort number when the service type is NodePort
  ### Ref: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  ###
  epmdNodePort: 32562
  amqpNodePort: 32560
  managerNodePort: 30129

podManagementPolicy: OrderedReady

## Statefulsets rolling update update strategy
## Ref: https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#rolling-update
##
updateStrategy: OnDelete

## Statefulsets Pod Priority
## Ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
## priorityClassName: ""

## We usually recommend not to specify default resources and to leave this as
## a conscious choice for the user. This also increases chances charts run on
## environments with little resources, such as Minikube. If you do want to
## specify resources, uncomment the following lines, adjust them as necessary,
## and remove the curly braces after 'resources:'.
## If you decide to set the memory limit, make sure to also change the
## rabbitmqMemoryHighWatermark following the formula:
##   rabbitmqMemoryHighWatermark = 0.4 * resources.limits.memory
##
resources:
   limits:
     cpu: 200m
     memory: 2Gi
   requests:
     cpu: 200m
     memory: 2Gi
initContainer:
  resources:
  #   limits:
  #     cpu: 100m
  #     memory: 128Mi
     requests:
       cpu: 200m
       memory: 256Mi

## Additional init containers
extraInitContainers: []

## Additional containers
extraContainers: []

## Use an alternate scheduler, e.g. "stork".
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
# schedulerName:

## Data Persistency
persistentVolume:
  enabled: false
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  ## selector can be used to match an existing PersistentVolume
  selector: {}
  name: data
  accessModes:
    - ReadWriteOnce
  size: 20Gi
  annotations: {}
  labels: {}

## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
##
nodeSelector: {}

## Node tolerations for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
##
tolerations: []

## Extra Annotations to be added to pod
podAnnotations: {}

## Extra Annotations to be added to the StatefulSet
statefulSetAnnotations: {}

## Pod affinity
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
podAntiAffinity: soft
podAntiAffinityTopologyKey: "kubernetes.io/hostname"

## Affinity settings
## Defining 'affinity' will disable any podAntiAffinity settings.
## If you still need anti-affinity, you must include the configuration here.
##
affinity: {}

## Create default configMap
##
existingConfigMap: false

## Add additional labels to all resources
##
extraLabels: {}

## Role Based Access
## Ref: https://kubernetes.io/docs/admin/authorization/rbac/
##
rbac:
  create: true

## Service Account
## Ref: https://kubernetes.io/docs/admin/service-accounts-admin/
##
serviceAccount:
  create: true

  ## The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the fullname template
  # name:

  ## Automount API credentials for a service account.
  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server
  automountServiceAccountToken: true

ingress:
  ## Set to true to enable ingress record generation
  enabled: false

  path: /

  ## The list of hostnames to be covered with this ingress record.
  ## Most likely this will be just one host, but in the event more hosts are needed, this is an array
  ## hostName: foo.bar.com

  ## Set this to true in order to enable TLS on the ingress record
  tls: false

  ## If TLS is set to true, you must declare what secret will store the key/certificate for TLS
  tlsSecret: myTlsSecret

  ## Ingress annotations done as key:value pairs
  annotations: {}
  #  kubernetes.io/ingress.class: nginx

livenessProbe:
  initialDelaySeconds: 120
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  exec:
    command:
      - /bin/sh
      - -c
      - 'wget -O - -q --header "Authorization: Basic `echo -n \"$RABBIT_MANAGEMENT_USER:$RABBIT_MANAGEMENT_PASSWORD\" | base64`" http://localhost:15672/api/healthchecks/node | grep -qF "{\"status\":\"ok\"}"'

readinessProbe:
  initialDelaySeconds: 20
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 6
  exec:
    command:
      - /bin/sh
      - -c
      - 'wget -O - -q --header "Authorization: Basic `echo -n \"$RABBIT_MANAGEMENT_USER:$RABBIT_MANAGEMENT_PASSWORD\" | base64`" http://localhost:15672/api/healthchecks/node | grep -qF "{\"status\":\"ok\"}"'

# Specifies an existing secret to be used for RMQ password, management user password and Erlang Cookie
existingSecret: ""


## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
securityContext:
  fsGroup: 101
  runAsGroup: 101
  runAsNonRoot: true
  runAsUser: 100

## Sets environment variables for the rabbitmq container
env: {}

prometheus:
  ## Configures Prometheus Exporter to expose and scrape stats.
  exporter:
    enabled: true
    env: {}
    image:
      repository: kbudde/rabbitmq-exporter
      tag: v1.0.0-RC7.1
      pullPolicy: IfNotPresent

    ## Port Prometheus scrapes for metrics
    port: 9090
    ## Comma-separated list of extended scraping capabilities supported by the target RabbitMQ server
    capabilities: "bert,no_sort"

    ## Allow overriding of container resources
    resources:
      limits:
        cpu: 200m
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 100Mi

  ## Prometheus is using Operator.  Setting to true will create Operator specific resources like ServiceMonitors and Alerts
  operator:
    ## Are you using Prometheus Operator? [Blog Post](https://coreos.com/blog/the-prometheus-operator.html)
    enabled: true

    ## Configures Alerts, which will be setup via Prometheus Operator / ConfigMaps.
    alerts:
      ## Prometheus exporter must be enabled as well
      enabled: true

      ## Selector must be configured to match Prometheus Install, defaulting to whats done by Prometheus Operator
      ## See [CoreOS Prometheus Chart](https://github.com/coreos/prometheus-operator/tree/master/helm)
      selector:
        role: alert-rules
      labels: {}

    serviceMonitor:
      ## Interval at which Prometheus scrapes RabbitMQ Exporter
      interval: 10s

      # Namespace Prometheus is installed in
      namespace: monitoring

      ## Defaults to whats used if you follow CoreOS [Prometheus Install Instructions](https://github.com/coreos/prometheus-operator/tree/master/helm#tldr)
      ## [Prometheus Selector Label](https://github.com/coreos/prometheus-operator/blob/master/helm/prometheus/templates/prometheus.yaml#L65)
      ## [Kube Prometheus Selector Label](https://github.com/coreos/prometheus-operator/blob/master/helm/kube-prometheus/values.yaml#L298)
      selector:
        prometheus: kube-prometheus

## Kubernetes Cluster Domain
clusterDomain: cluster.local

## Pod Disruption Budget
podDisruptionBudget:
   maxUnavailable: 1
   #minAvailable: 1

lifecycle: {}
